package control;


public class NiveauManager {
    private static final int[][][] NIVEAUX = {
    		{
    		{1, 1, 1, 1, 1},
    		{1, 0, 3, 2, 1},
    		{1, 0, 4, 0, 1},
    		{1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1},
    		{1, 4, 0, 0, 3, 2, 1},
    		{1, 1, 1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1},
    		{1, 0, 0, 0, 0, 0, 1},
    		{1, 0, 3, 0, 3, 0, 1},
    		{1, 0, 0, 4, 0, 0, 1},
    		{1, 0, 2, 0, 2, 0, 1},
    		{1, 0, 0, 0, 0, 0, 1},
    		{1, 1, 1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1},
    		{1, 0, 0, 0, 0, 0, 1},
    		{1, 0, 1, 1, 1, 0, 1},
    		{1, 0, 1, 2, 1, 0, 1},
    		{1, 0, 1, 3, 1, 0, 1},
    		{1, 0, 0, 4, 0, 0, 1},
    		{1, 1, 1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    		{1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
    		{1, 0, 3, 0, 1, 0, 3, 0, 2, 1},
    		{1, 0, 0, 2, 0, 3, 0, 0, 2, 1},
    		{1, 1, 1, 0, 1, 1, 0, 1, 1, 1},
    		{1, 0, 0, 0, 0, 0, 0, 0, 2, 1},
    		{1, 0, 0, 0, 1, 0, 3, 0, 0, 1},
    		{1, 0, 0, 4, 0, 0, 0, 0, 0, 1},
    		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1, 1, 1},
    		{1, 0, 0, 0, 1, 0, 2, 2, 1},
    		{1, 0, 3, 0, 0, 0, 0, 0, 1},
    		{1, 0, 0, 3, 1, 0, 2, 2, 1},
    		{1, 1, 3, 4, 0, 0, 0, 0, 1},
    		{1, 0, 0, 3, 1, 0, 0, 0, 1},
    		{1, 0, 1, 0, 1, 1, 0, 0, 1},
    		{1, 0, 0, 0, 0, 0, 0, 0, 1},
    		{1, 1, 1, 1, 1, 1, 1, 1, 1}
    		},
    		{
    		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    		{1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
    		{1, 0, 3, 0, 1, 0, 3, 0, 0, 1},
    		{1, 0, 0, 0, 0, 3, 0, 0, 2, 1},
    		{1, 0, 3, 0, 1, 0, 0, 0, 0, 1},
    		{1, 1, 1, 0, 1, 1, 0, 1, 1, 1},
    		{1, 2, 0, 0, 0, 0, 0, 0, 2, 1},
    		{1, 0, 0, 0, 1, 1, 0, 0, 0, 1},
    		{1, 0, 4, 0, 0, 0, 0, 2, 0, 1},
    		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
    		}
    		};

    private int niveauCourant = 0;

    public int[][] getNiveauCourant() {
        return NIVEAUX[niveauCourant];
    }

    public boolean passerAuNiveauSuivant() {
        if (niveauCourant < NIVEAUX.length - 1) {
            niveauCourant++;
            return true;
        }
        return false;
    }

    public boolean estDernierNiveau() {
        return niveauCourant == NIVEAUX.length - 1;
    }

}
